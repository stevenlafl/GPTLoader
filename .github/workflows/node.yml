name: Node.js CI

on:
  push:
    branches: [ master ]
    tags: 
      - v*
  pull_request:
    branches: [ master ]

env:
  PLATFORMS: linux/amd64,linux/arm64
  REPO_PREFIX: stevenlafl/gptloader

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    # - name: Run linter
    #   run: npm run lint
    - name: Build
      run: npm run build
    - name: Run tests
      run: npm test

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ env.REPO_PREFIX }}:latest, ${{ env.REPO_PREFIX }}:${{ github.ref_name }}
      - name: Build
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: false
          tags: ${{ env.REPO_PREFIX }}:latest